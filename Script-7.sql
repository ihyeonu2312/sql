SELECT STUDNO, NAME, STUDENT.DEPTNO D1, DEPARTMENT.DEPTNO  D2, DNAME 
FROM SAMPLE.STUDENT, DEPARTMENT
WHERE STUDENT.DEPTNO = DEPARTMENT.DEPTNO ;
--WHERE STUDENT.DEPTNO <> DEPARTMENT.DEPTNO ; 같지 않을때

-- 학생 16명
-- 학과 7개

-- 카티션 프로덕트

SELECT STUDNO, NAME, S.DEPTNO , DNAME 
FROM STUDENT s , DEPARTMENT d 
WHERE S.DEPTNO = D.DEPTNO ;

-- 전인하 학생의 학번, 이름, 학과이름, 학과위치를 조회
SELECT STUDNO, NAME 
FROM STUDENT s
WHERE NAME = '전인하';

SELECT STUDNO, NAME, DNAME, LOC
FROM STUDENT s, DEPARTMENT d
WHERE NAME = '전인하' AND S.DEPTNO = D.DEPTNO;

-- 몸무게가 80KG이상인 학생의 학번, 이름, 체중, 학과이름, 학과위치 조회
SELECT STUDNO, NAME, WEIGHT, DNAME, LOC 
FROM STUDENT s, DEPARTMENT d 
WHERE WEIGHT >= 80 AND S.DEPTNO = D.DEPTNO;

-- 1호관 소속 학생의 학번, 이름, 학과 이름 조회
SELECT STUDNO, NAME, DNAME
FROM DEPARTMENT d , STUDENT s 
WHERE LOC = '1호관' AND S.DEPTNO = D.DEPTNO ;

SELECT *
FROM STUDENT s ;

SELECT *
FROM DEPARTMENT d ;

-- ANSI 99 (SQL 표준)
SELECT STUDNO, NAME, DNAME 
FROM DEPARTMENT d 
NATURAL JOIN STUDENT s ;
WHERE LOC = '1호관'

-- 자연조인을 사용하여 학번, 이름, 학과번호, 학과이름 조회
SELECT STUDNO, NAME, DEPTNO, DNAME
FROM STUDENT s 
NATURAL JOIN DEPARTMENT d ;

SELECT *
FROM STUDENT s 
NATURAL JOIN DEPARTMENT d ;

SELECT *
FROM STUDENT s , DEPARTMENT d 
WHERE S.DEPTNO = D.DEPTNO;

-- JOIN ~ USING, JOIN ~ ON
SELECT *
FROM STUDENT s 
JOIN DEPARTMENT d USING(DEPTNO);

SELECT *
FROM STUDENT s 
JOIN DEPARTMENT d ON S.DEPTNO = D.DEPTNO;

-- NATURAL JOIN을 사용하여 교수번호, 교수이름, 학과번호, 학과이름 조회
SELECT PROFNO, NAME, DEPTNO, DNAME
FROM PROFESSOR p 
NATURAL JOIN DEPARTMENT d;

-- 교수별 급여 등급을 조회, 대상테이블 : PROFESSOR, SALGRADE
SELECT *
FROM SALGRADE s ;

SELECT PROFNO ,NAME ,SAL
FROM PROFESSOR p ;


SELECT PROFNO, NAME, SAL
FROM PROFESSOR p, SALGRADE s 
WHERE SAL BETWEEN LOSAL AND HISAL;

SELECT PROFNO, NAME, SAL, GRADE
FROM PROFESSOR p 
JOIN SALGRADE s 
ON SAL >= LOSAL AND SAL <= HISAL;

SELECT * FROM STUDENT;

SELECT * FROM PROFESSOR p ;


-- 학번, 이름, 교수번호, 담당교수이름 조회
SELECT STUDNO, S.NAME, PROFNO , P.NAME 
FROM STUDENT s
JOIN PROFESSOR p USING(PROFNO);

-- 지도교수가 없는 학생도 포함하여 조회
SELECT STUDNO, S.NAME, PROFNO , P.NAME 
FROM STUDENT s
LEFT JOIN PROFESSOR p USING(PROFNO);

-- 지도학생이 없는 교수도 포함하여 조회
SELECT STUDNO, S.NAME, PROFNO , P.NAME 
FROM STUDENT s
RIGHT JOIN PROFESSOR p USING(PROFNO);

-- 지도 교수가 겂는 학생 및 지도학생이 없는 교수를 모두 조회
SELECT STUDNO, S.NAME, PROFNO , P.NAME 
FROM STUDENT s
FULL JOIN PROFESSOR p USING(PROFNO);

-- (+) FULL JOIN 불가능
SELECT *
FROM STUDENT s, PROFESSOR p 
WHERE S.PROFNO = P.PROFNO(+); -- LEFT JOIN

SELECT *
FROM STUDENT s, PROFESSOR p 
WHERE S.PROFNO(+) = P.PROFNO; -- RIGHT JOIN

-- 탄생 월별 학생 숫자 구하기
SELECT M, NVL(CNT, 0) CNT 
FROM(
	SELECT TO_CHAR(BIRTHDATE, 'MM') M, COUNT(*) CNT
	FROM STUDENT s 
	GROUP BY TO_CHAR(BIRTHDATE, 'MM')
)A
FULL JOIN (
	SELECT LTRIM(TO_CHAR(ROWNUM, '00')) M 
	FROM STUDENT s 
	WHERE ROWNUM <= 12
) B USING (M)
ORDER BY 1;

-- DEPARTMENT를 대상으로 부서이름과 상위부서이름을 조회

SELECT * FROM DEPARTMENT d;
SELECT * FROM STUDENT s ;
SELECT D.DNAME || '의 소속학과는 ' || NVL2(D2.DNAME, D2.DNAME || '입니다', '없습니다') 
FROM DEPARTMENT d
LEFT JOIN DEPARTMENT d2 ON D.COLLEGE = D2.DEPTNO;

-- 학생의 학번, 이름, 담당교수의 교수번호, 교수이름, 학생의 소속학과이름을 조회
-- 단, 모든 학생의 정보를 조회
SELECT STUDNO, S.NAME , PROFNO, P.NAME ,DNAME
FROM STUDENT s 
NATURAL JOIN DEPARTMENT d  
LEFT JOIN PROFESSOR p USING(PROFNO);

SELECT * FROM PROFESSOR p ;

SELECT * FROM STUDENT s ;
SELECT * FROM DEPARTMENT d;

-- 서브쿼리(SELECT)
-- 학번, 이름, 학과번호, 학과이름 조회
SELECT 
	STUDNO , 
	NAME, 
	DEPTNO, 
	(SELECT DNAME FROM DEPARTMENT d WHERE D.DEPTNO = S.DEPTNO) DNAME,
	(SELECT NAME FROM PROFESSOR p WHERE P.PROFNO = S.PROFNO) PNAME
FROM STUDENT s;

